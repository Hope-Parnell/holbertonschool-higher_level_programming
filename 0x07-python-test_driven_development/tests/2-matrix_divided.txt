===========================
2-matrix_divided test file
===========================
This module divides a matrix by a given number

Correct Case
===============
Testing to see if the program works with correct input

::
  >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
  >>> matrix = [ [1, 2, 3], [4, 5, 6] ]
  >>> matrix_divided(matrix, 3)
  [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Error Cases
===============
Testing to make sure that improper cases work properly

Div is 0
::
  >>> matrix = [ [1, 2, 3], [4, 5, 6] ]
  >>> matrix_divided(matrix, 0)
  Traceback (most recent call last):
  ...
  ZeroDivisionError: division by zero

Div not a number
::
  >>> matrix = [ [1, 2, 3], [4, 5, 6] ]
  >>> matrix_divided(matrix, "lol")
  Traceback (most recent call last):
  ...
  TypeError: div must be a number

matrix is not a matrix
::
  >>> matrix_divided([1, 2], 3)
  Traceback (most recent call last):
  ...
  TypeError: matrix must be a matrix (list of lists) of integers/floats

matrix contains non-numbers
::
  >>> matrix = [ [1 , 2 , 3], ["four" ,"five","six"] ]
  >>> matrix_divided(matrix, 2)
  Traceback (most recent call last):
  ...
  TypeError: matrix must be a matrix (list of lists) of integers/floats

lists within matrix are different lengths
::
  >>> matrix = [ [1, 2, 3], [1, 2] ]
  >>> matrix_divided(matrix, 2)
  Traceback (most recent call last):
  ...
  TypeError: Each row of the matrix must have the same size
